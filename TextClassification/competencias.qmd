---
lang: es
title: "Competencias internacionales para generar avances en inteligencia artificial"
# subtitle: "Poornima Institute of Engineering & Technology"
author:
    - name: "Mario Graff"
      url: https://mgraffg.github.io
      affiliation: INFOTEC

format:
  revealjs:
    theme: simple
    chalkboard: true
    footer: <https://mgraffg.github.io>
bibliography: references.bib    
---

# INFOTEC

```{python}
#| include: false
from scipy.stats import multivariate_normal
from sklearn import decomposition, tree
from sklearn.datasets import load_iris
from sklearn.svm import LinearSVC
import plotly.express as px
import plotly.graph_objects as go
import re
import pandas as pd
import numpy as np
import seaborn as sns
```

## Aguascalientes, México

:::: {.columns} 
::: {.column width="50%"} 
![](aguascalientes_edo.jpg)
:::

::: {.fragment .callout-note icon="false" .column width="50%"} 
### INFOTEC 

Centro Público de Investigación del Gobierno Federal, que contribuye a la Transformación Digital de México, a través de la investigación, la innovación, la formación académica y el desarrollo de productos y servicios TIC.
Sus alcances abarcan al sector público y privado, habilitando caminos que conduzcan hacia un México moderno y de inclusión digital.
:::
::::

# Introducción 

## Definiciones 

:::: {.columns}
::: {.callout-note icon="false" .column} 
### Inteligencia Artificial (IA)

Conjunto de teorías, métodos y algoritmos para el desarrollo y estudio de sistemas que presentan un comportamiento que sería identificado como inteligente.
:::

::: {.fragment .callout-note icon="false" .column}
### Aprendizaje Computacional  

Aprendizaje Computacional es una subárea de Inteligencia Artificial que estudia el desarrollo e implementación de algoritmos capaces de aprender de datos de manera autónoma sin haber sido explícitamente programados. 
:::
::::

::: {.fragment .callout-note icon="false"} 
### Procesamiento de Lenguaje Natural

Conjunto de teorías, métodos y algoritmos para el desarrollo y estudio de sistemas que permitan el entendimiento, generación y manipulación del lenguaje humano.
:::

## Percepción de Inteligencia Artificial (IA)

:::: {.columns}

::: {.callout-tip icon="false" .column width=50%}
### Así la vemos

![](img/robot-futuro.jpg){height=253}
:::

::: {.fragment .callout-tip icon="false" .column width=50%}
### Así está

![](img/robot-juguete.png){fig-align="left"}
:::
::::

# Aprendizaje computacional

## Machine Learning 

::: {.callout-note icon=false}
### Tipos de aprendizaje computacional
* Aprendizaje no supervisado
* Aprendizaje supervisado
* Aprendizaje por refuerzo
:::

:::: {.columns}

::: {.fragment .callout-tip icon="false" .column}
### Aprendizaje no supervisado

![](img/umap_prob1489.png){fig-align="center" height=253}
:::

::: {.fragment .callout-tip icon="false" .column}
### Aprendizaje por refuerzo

* Juegos
* Actividades
* Retroalimentación al final 
:::
::::

## Clasificadores lineales

```{python}
#| echo: false
D, y = load_iris(return_X_y=True)
pca = decomposition.PCA(n_components=2).fit(D)
Dn = pca.transform(D)
df = pd.DataFrame(Dn, columns=['x', 'y'])

df['Class'] = ['P' if i == 0 else 'N' for i in y]
m = LinearSVC(dual='auto').fit(Dn, [1 if i == 0 else 0 for i in y])
w_1, w_2 = m.coef_[0]
w_0 = m.intercept_[0]
g_0 = [dict(x1=x, x2=y, tipo='g(x)=0')
       for x, y in zip(Dn[:, 0], (-w_0 - w_1 * Dn[:, 0]) / w_2)]
line = go.Scatter(x=Dn[:, 0], y=(-w_0 - w_1 * Dn[:, 0]) / w_2,
                  line=dict(color='darkgrey'),
                  showlegend=False)
fig = px.scatter(df, color='Class', x='x', y='y', height=400)

fig.update_layout(yaxis={'visible': True, 'showticklabels': False}, 
                  xaxis={'visible': True, 'showticklabels': False},
                  xaxis_title=None, yaxis_title=None)
fig.add_trace(line)
fig.show()
```

## Árboles de decisión

:::: {.columns} 

::: {.callout-note icon="false" .column width=50%}
## Problem 

```{python}
#| code-fold: false
#| warning: false
seed = 1
X_1 = multivariate_normal(mean=[5, 5],
                          seed=seed,
                          cov=[[4, 0], [0, 2]]).rvs(1000)
X_2 = multivariate_normal(mean=[-5, -10],
                          seed=seed,
                          cov=[[2, 1], [1, 3]]).rvs(1000)
X_3 = multivariate_normal(mean=[15, -6],
                          seed=seed,
                          cov=[[2, 3], [3, 7]]).rvs(1000)
df = pd.DataFrame([dict(x=x, y=y, clase=1) for x, y in X_1] + \
                  [dict(x=x, y=y, clase=2) for x, y in X_2] + \
                  [dict(x=x, y=y, clase=3) for x, y in X_3])
sns.relplot(data=df, kind='scatter',
            x='x', y='y', hue='clase')
```
:::

::: {.callout-note icon="false" .column width=50% .fragment}
## Classifier 
```{python}
#| code-fold: false
X = np.concatenate((X_1, X_2, X_3), axis=0)
y = np.array([1] * 1000 + [2] * 1000 + [3] * 1000)
arbol = tree.DecisionTreeClassifier(criterion='entropy').fit(X, y)
_ = tree.plot_tree(arbol, node_ids=True,
                   feature_names=['x', 'y'], label='root')
```
::: 
::::

# Competencias

## Definición

::: {.callout-note icon="false"}
### @jair2023academic

Una competencia académica tiene el objetivo de responder preguntas científicas que idealmente empujen la frontera del conocimiento y tengan un impacto duradero y/o conjunto de prueba de referencia.
:::

:::: {.columns .fragment}
::: {.callout-tip icon="false" .column} 
### Ley de longitud de 1714

Una serie de premios monetarios para la persona que encontrara un método simple y práctico para la determinación precisa de la longitud geográfica de un barco en alta mar. 
:::
::: {.column} 
![](img/longitude_act.png)
::: 
::::

## Sociales

::: {.callout-tip icon="false" .fragment}
### [Longitude Price](https://longitudeprize.org)

:::: {.columns}
::: {.column}
![](img/longitud.jpeg){fig-align="center" height=210}
:::
::: {.column}
![](img/longitud_esqueleto.png){fig-align="center" height=210}
:::
::::

:::

::: {.callout-tip icon="false" .fragment}
### [xprice](xprice.org)

:::: {.columns}
::: {.column}
![](img/xprice.jpeg){fig-align="center" height=210}
:::
::: {.column}
![](img/bosque.png){fig-align="center" height=210}
:::
::::

:::

## Conducción autónoma

::: {.callout-tip icon="false"}
### [Defense Advanced Research Projects Agency (DARPA 2004)](https://www.darpa.mil/news/2014/grand-challenge-ten-years-later)
:::: {.columns}
::: {.column}
![](img/darpa.jpg){fig-align="center"}
:::

::: {.column}
![](img/darpa2.png){fig-align="center"}
:::
::::
:::: {.columns .fragment}
::: {.column}
* 100 equipos
* Un equipo logró 12km
:::
::: {.column}
* 195 equipos
* 5 equipos terminaron los 212km
:::
::::

::: {.fragment}
Siguieron, conduciendo en la ciudad 2007... en simuladores (e.g, [CARLA](https://carla.org))
:::
:::

## [RoboCup](https://www.robocup.org)

::: {.callout-tip icon="false"}
### Iniciando 1990
![](img/robocup.jpeg){fig-align="center"}
:::

## Competencia de [Netflix](https://www.kaggle.com/datasets/netflix-inc/netflix-prize-data)

::: {.callout-tip icon="false"}
### 1M al equipo ganador
:::: {.columns}

::: {.column}
* Sistema de recomendación
* Mejorar su sistema 
* Ganador mejoro en 10\%
:::

::: {.column}
![](img/netflix_cine.png){fig-align="center"}
:::
::::
:::

## [ECMLPKDD](https://ecmlpkdd.org) - 1999

::: {.callout-tip icon="false"}
### [Discovery Challenge](https://ecmlpkdd.org/2024/program-discovery-challenge/)
![](img/ecmlpkdd.jpeg){fig-align="center"}
:::

# Conclusiones

::: {.callout-tip icon="false"}
## Competencias vistas

* [Longitude Price](https://longitudeprize.org)
* [xprice](xprice.org)
* [CARLA](https://carla.org)
* [Netflix](https://www.kaggle.com/datasets/netflix-inc/netflix-prize-data)
* [Discovery Challenge](https://ecmlpkdd.org/2024/program-discovery-challenge/)
:::

# Referencias

::: {#refs}
:::

# ¡Gracias! 